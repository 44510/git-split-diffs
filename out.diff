yarn run v1.21.1
$ yarn build && node ./build/index.js
$ tsc --build
COMMIT commit 9fbcb99a3335ae9514f97a4a6e882147f5c9f944
COMMIT Author: Sheetal Nandi <shkamat@microsoft.com>
COMMIT Date:   Tue Jun 2 12:38:40 2020 -0700
COMMIT 
COMMIT     Emit build info even on noEmitOnError or tsc --build (#38853)
COMMIT     
COMMIT     * Emit buildinfo when there are errors with noEmitOnError?
COMMIT     TODO: --build mode
COMMIT     
COMMIT     * Always emit tsbuild info even if there are non syntax errors in tsc --build mode
COMMIT     
COMMIT     * Sort affectedFilesPendingEmit for consistent build info text
COMMIT 
DIFF diff --git a/src/compiler/builder.ts b/src/compiler/builder.ts
DIFF index 3eb2115daa..5f3bc171bb 100644
DIFF --- a/src/compiler/builder.ts
DIFF +++ b/src/compiler/builder.ts
HUNK @@ -148,7 +148,7 @@ namespace ts {
HUNK          /**
HUNK           * true if build info is emitted
HUNK           */
HUNK -        emittedBuildInfo?: boolean;
HUNK +        buildInfoEmitPending: boolean;
HUNK          /**
HUNK           * Already seen emitted files
HUNK           */
HUNK @@ -250,14 +250,14 @@ namespace ts {
HUNK              BuilderState.getAllFilesExcludingDefaultLibraryFile(state, newProgram, /*firstSourceFile*/ undefined)
HUNK                  .forEach(file => state.changedFilesSet.set(file.resolvedPath, true));
HUNK          }
HUNK -        else if (oldCompilerOptions && compilerOptionsAffectEmit(compilerOptions, oldCompilerOptions)) {
HUNK +        else if (oldCompilerOptions && !outFile(compilerOptions) && compilerOptionsAffectEmit(compilerOptions, oldCompilerOptions)) {
HUNK              // Add all files to affectedFilesPendingEmit since emit changed
HUNK              newProgram.getSourceFiles().forEach(f => addToAffectedFilesPendingEmit(state, f.resolvedPath, BuilderFileEmit.Full));
HUNK              Debug.assert(!state.seenAffectedFiles || !state.seenAffectedFiles.size);
HUNK              state.seenAffectedFiles = state.seenAffectedFiles || createMap<true>();
HUNK          }
HUNK  
HUNK -        state.emittedBuildInfo = !state.changedFilesSet.size && !state.affectedFilesPendingEmit;
HUNK +        state.buildInfoEmitPending = !!state.changedFilesSet.size;
HUNK          return state;
HUNK      }
HUNK  
HUNK @@ -611,7 +611,7 @@ namespace ts {
HUNK          isBuildInfoEmit?: boolean
HUNK      ) {
HUNK          if (isBuildInfoEmit) {
HUNK -            state.emittedBuildInfo = true;
HUNK +            state.buildInfoEmitPending = false;
HUNK          }
HUNK          else if (affected === state.program) {
HUNK              state.changedFilesSet.clear();
HUNK @@ -624,6 +624,7 @@ namespace ts {
HUNK              }
HUNK              if (isPendingEmit) {
HUNK                  state.affectedFilesPendingEmitIndex!++;
HUNK +                state.buildInfoEmitPending = true;
HUNK              }
HUNK              else {
HUNK                  state.affectedFilesIndex!++;
HUNK @@ -688,12 +689,14 @@ namespace ts {
HUNK      }
HUNK  
HUNK      export type ProgramBuildInfoDiagnostic = string | [string, readonly ReusableDiagnostic[]];
HUNK +    export type ProgramBuilderInfoFilePendingEmit = [string, BuilderFileEmit];
HUNK      export interface ProgramBuildInfo {
HUNK          fileInfos: MapLike<BuilderState.FileInfo>;
HUNK          options: CompilerOptions;
HUNK          referencedMap?: MapLike<string[]>;
HUNK          exportedModulesMap?: MapLike<string[]>;
HUNK          semanticDiagnosticsPerFile?: ProgramBuildInfoDiagnostic[];
HUNK +        affectedFilesPendingEmit?: ProgramBuilderInfoFilePendingEmit[];
HUNK      }
HUNK  
HUNK      /**
HUNK @@ -751,6 +754,17 @@ namespace ts {
HUNK              result.semanticDiagnosticsPerFile = semanticDiagnosticsPerFile;
HUNK          }
HUNK  
HUNK +        if (state.affectedFilesPendingEmit) {
HUNK +            const affectedFilesPendingEmit: ProgramBuilderInfoFilePendingEmit[] = [];
HUNK +            const seenFiles = createMap<true>();
HUNK +            for (const path of state.affectedFilesPendingEmit.slice(state.affectedFilesPendingEmitIndex).sort(compareStringsCaseSensitive)) {
HUNK +                if (addToSeen(seenFiles, path)) {
HUNK +                    affectedFilesPendingEmit.push([relativeToBuildInfo(path), state.affectedFilesPendingEmitKind!.get(path)!]);
HUNK +                }
HUNK +            }
HUNK +            result.affectedFilesPendingEmit = affectedFilesPendingEmit;
HUNK +        }
HUNK +
HUNK          return result;
HUNK  
HUNK          function relativeToBuildInfoEnsuringAbsolutePath(path: string) {
HUNK @@ -916,6 +930,7 @@ namespace ts {
HUNK          else if (kind === BuilderProgramKind.EmitAndSemanticDiagnosticsBuilderProgram) {
HUNK              (builderProgram as EmitAndSemanticDiagnosticsBuilderProgram).getSemanticDiagnosticsOfNextAffectedFile = getSemanticDiagnosticsOfNextAffectedFile;
HUNK              (builderProgram as EmitAndSemanticDiagnosticsBuilderProgram).emitNextAffectedFile = emitNextAffectedFile;
HUNK +            builderProgram.emitBuildInfo = emitBuildInfo;
HUNK          }
HUNK          else {
HUNK              notImplemented();
HUNK @@ -923,6 +938,15 @@ namespace ts {
HUNK  
HUNK          return builderProgram;
HUNK  
HUNK +        function emitBuildInfo(writeFile?: WriteFileCallback, cancellationToken?: CancellationToken): EmitResult {
HUNK +            if (state.buildInfoEmitPending) {
HUNK +                const result = Debug.checkDefined(state.program).emitBuildInfo(writeFile || maybeBind(host, host.writeFile), cancellationToken);
HUNK +                state.buildInfoEmitPending = false;
HUNK +                return result;
HUNK +            }
HUNK +            return emitSkippedWithNoDiagnostics;
HUNK +        }
HUNK +
HUNK          /**
HUNK           * Emits the next affected file's emit result (EmitResult and sourceFiles emitted) or returns undefined if iteration is complete
HUNK           * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host
HUNK @@ -936,7 +960,7 @@ namespace ts {
HUNK                  if (!outFile(state.compilerOptions)) {
HUNK                      const pendingAffectedFile = getNextAffectedFilePendingEmit(state);
HUNK                      if (!pendingAffectedFile) {
HUNK -                        if (state.emittedBuildInfo) {
HUNK +                        if (!state.buildInfoEmitPending) {
HUNK                              return undefined;
HUNK                          }
HUNK  
HUNK @@ -993,7 +1017,7 @@ namespace ts {
HUNK          function emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult {
HUNK              if (kind === BuilderProgramKind.EmitAndSemanticDiagnosticsBuilderProgram) {
HUNK                  assertSourceFileOkWithoutNextAffectedCall(state, targetSourceFile);
HUNK -                const result = handleNoEmitOptions(builderProgram, targetSourceFile, cancellationToken);
HUNK +                const result = handleNoEmitOptions(builderProgram, targetSourceFile, writeFile, cancellationToken);
HUNK                  if (result) return result;
HUNK                  if (!targetSourceFile) {
HUNK                      // Emit and report any errors we ran into.
HUNK @@ -1142,7 +1166,10 @@ namespace ts {
HUNK              referencedMap: getMapOfReferencedSet(program.referencedMap, toPath),
HUNK              exportedModulesMap: getMapOfReferencedSet(program.exportedModulesMap, toPath),
HUNK              semanticDiagnosticsPerFile: program.semanticDiagnosticsPerFile && arrayToMap(program.semanticDiagnosticsPerFile, value => toPath(isString(value) ? value : value[0]), value => isString(value) ? emptyArray : value[1]),
HUNK -            hasReusableDiagnostic: true
HUNK +            hasReusableDiagnostic: true,
HUNK +            affectedFilesPendingEmit: map(program.affectedFilesPendingEmit, value => toPath(value[0])),
HUNK +            affectedFilesPendingEmitKind: program.affectedFilesPendingEmit && arrayToMap(program.affectedFilesPendingEmit, value => toPath(value[0]), value => value[1]),
HUNK +            affectedFilesPendingEmitIndex: program.affectedFilesPendingEmit && 0,
HUNK          };
HUNK          return {
HUNK              getState: () => state,
HUNK @@ -1165,6 +1192,7 @@ namespace ts {
HUNK              getCurrentDirectory: notImplemented,
HUNK              emitNextAffectedFile: notImplemented,
HUNK              getSemanticDiagnosticsOfNextAffectedFile: notImplemented,
HUNK +            emitBuildInfo: notImplemented,
HUNK              close: noop,
HUNK          };
HUNK  
HUNK @@ -1195,6 +1223,7 @@ namespace ts {
HUNK              getDeclarationDiagnostics: (sourceFile, cancellationToken) => getProgram().getDeclarationDiagnostics(sourceFile, cancellationToken),
HUNK              getSemanticDiagnostics: (sourceFile, cancellationToken) => getProgram().getSemanticDiagnostics(sourceFile, cancellationToken),
HUNK              emit: (sourceFile, writeFile, cancellationToken, emitOnlyDts, customTransformers) => getProgram().emit(sourceFile, writeFile, cancellationToken, emitOnlyDts, customTransformers),
HUNK +            emitBuildInfo: (writeFile, cancellationToken) => getProgram().emitBuildInfo(writeFile, cancellationToken),
HUNK              getAllDependencies: notImplemented,
HUNK              getCurrentDirectory: () => getProgram().getCurrentDirectory(),
HUNK              close: noop,
DIFF diff --git a/src/compiler/builderPublic.ts b/src/compiler/builderPublic.ts
DIFF index bff123b915..e7b7aff636 100644
DIFF --- a/src/compiler/builderPublic.ts
DIFF +++ b/src/compiler/builderPublic.ts
HUNK @@ -99,6 +99,8 @@ namespace ts {
HUNK           * in that order would be used to write the files
HUNK           */
HUNK          emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;
HUNK +        /*@internal*/
HUNK +        emitBuildInfo(writeFile?: WriteFileCallback, cancellationToken?: CancellationToken): EmitResult;
HUNK          /**
HUNK           * Get the current directory of the program
HUNK           */
DIFF diff --git a/src/compiler/program.ts b/src/compiler/program.ts
DIFF index c9a3f88476..18f730cafe 100644
DIFF --- a/src/compiler/program.ts
DIFF +++ b/src/compiler/program.ts
HUNK @@ -1585,7 +1585,7 @@ namespace ts {
HUNK  
HUNK          function emitWorker(program: Program, sourceFile: SourceFile | undefined, writeFileCallback: WriteFileCallback | undefined, cancellationToken: CancellationToken | undefined, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers, forceDtsEmit?: boolean): EmitResult {
HUNK              if (!forceDtsEmit) {
HUNK -                const result = handleNoEmitOptions(program, sourceFile, cancellationToken);
HUNK +                const result = handleNoEmitOptions(program, sourceFile, writeFileCallback, cancellationToken);
HUNK                  if (result) return result;
HUNK              }
HUNK  
HUNK @@ -3638,11 +3638,17 @@ namespace ts {
HUNK      }
HUNK  
HUNK      /*@internal*/
HUNK -    export function handleNoEmitOptions(program: ProgramToEmitFilesAndReportErrors, sourceFile: SourceFile | undefined, cancellationToken: CancellationToken | undefined): EmitResult | undefined {
HUNK +    export const emitSkippedWithNoDiagnostics: EmitResult = { diagnostics: emptyArray, sourceMaps: undefined, emittedFiles: undefined, emitSkipped: true };
HUNK +
HUNK +    /*@internal*/
HUNK +    export function handleNoEmitOptions(
HUNK +        program: ProgramToEmitFilesAndReportErrors,
HUNK +        sourceFile: SourceFile | undefined,
HUNK +        writeFile: WriteFileCallback | undefined,
HUNK +        cancellationToken: CancellationToken | undefined
HUNK +    ): EmitResult | undefined {
HUNK          const options = program.getCompilerOptions();
HUNK -        if (options.noEmit) {
HUNK -            return { diagnostics: emptyArray, sourceMaps: undefined, emittedFiles: undefined, emitSkipped: true };
HUNK -        }
HUNK +        if (options.noEmit) return emitSkippedWithNoDiagnostics;
HUNK  
HUNK          // If the noEmitOnError flag is set, then check if we have any errors so far.  If so,
HUNK          // immediately bail out.  Note that we pass 'undefined' for 'sourceFile' so that we
HUNK @@ -3659,9 +3665,14 @@ namespace ts {
HUNK              diagnostics = program.getDeclarationDiagnostics(/*sourceFile*/ undefined, cancellationToken);
HUNK          }
HUNK  
HUNK -        return diagnostics.length > 0 ?
HUNK -            { diagnostics, sourceMaps: undefined, emittedFiles: undefined, emitSkipped: true } :
HUNK -            undefined;
HUNK +        if (!diagnostics.length) return undefined;
HUNK +        let emittedFiles: string[] | undefined;
HUNK +        if (!sourceFile && !outFile(options)) {
HUNK +            const emitResult = program.emitBuildInfo(writeFile, cancellationToken);
HUNK +            if (emitResult.diagnostics) diagnostics = [...diagnostics, ...emitResult.diagnostics];
HUNK +            emittedFiles = emitResult.emittedFiles;
HUNK +        }
HUNK +        return { diagnostics, sourceMaps: undefined, emittedFiles, emitSkipped: true };
HUNK      }
HUNK  
HUNK      /*@internal*/
DIFF diff --git a/src/compiler/tsbuildPublic.ts b/src/compiler/tsbuildPublic.ts
DIFF index a55712c449..2ec93db074 100644
DIFF --- a/src/compiler/tsbuildPublic.ts
DIFF +++ b/src/compiler/tsbuildPublic.ts
HUNK @@ -699,6 +699,18 @@ namespace ts {
HUNK          };
HUNK      }
HUNK  
HUNK +    enum BuildStep {
HUNK +        CreateProgram,
HUNK +        SyntaxDiagnostics,
HUNK +        SemanticDiagnostics,
HUNK +        Emit,
HUNK +        EmitBundle,
HUNK +        EmitBuildInfo,
HUNK +        BuildInvalidatedProjectOfBundle,
HUNK +        QueueReferencingProjects,
HUNK +        Done
HUNK +    }
HUNK +
HUNK      function createBuildOrUpdateInvalidedProject<T extends BuilderProgram>(
HUNK          kind: InvalidatedProjectKind.Build | InvalidatedProjectKind.UpdateBundle,
HUNK          state: SolutionBuilderState<T>,
HUNK @@ -708,18 +720,7 @@ namespace ts {
HUNK          config: ParsedCommandLine,
HUNK          buildOrder: readonly ResolvedConfigFileName[],
HUNK      ): BuildInvalidedProject<T> | UpdateBundleProject<T> {
HUNK -        enum Step {
HUNK -            CreateProgram,
HUNK -            SyntaxDiagnostics,
HUNK -            SemanticDiagnostics,
HUNK -            Emit,
HUNK -            EmitBundle,
HUNK -            BuildInvalidatedProjectOfBundle,
HUNK -            QueueReferencingProjects,
HUNK -            Done
HUNK -        }
HUNK -
HUNK -        let step = kind === InvalidatedProjectKind.Build ? Step.CreateProgram : Step.EmitBundle;
HUNK +        let step = kind === InvalidatedProjectKind.Build ? BuildStep.CreateProgram : BuildStep.EmitBundle;
HUNK          let program: T | undefined;
HUNK          let buildResult: BuildResultFlags | undefined;
HUNK          let invalidatedProjectOfBundle: BuildInvalidedProject<T> | undefined;
HUNK @@ -781,8 +782,11 @@ namespace ts {
HUNK                              program => program.emit(targetSourceFile, writeFile, cancellationToken, emitOnlyDtsFiles, customTransformers)
HUNK                          );
HUNK                      }
HUNK -                    executeSteps(Step.SemanticDiagnostics, cancellationToken);
HUNK -                    if (step !== Step.Emit) return undefined;
HUNK +                    executeSteps(BuildStep.SemanticDiagnostics, cancellationToken);
HUNK +                    if (step === BuildStep.EmitBuildInfo) {
HUNK +                        return emitBuildInfo(writeFile, cancellationToken);
HUNK +                    }
HUNK +                    if (step !== BuildStep.Emit) return undefined;
HUNK                      return emit(writeFile, cancellationToken, customTransformers);
HUNK                  },
HUNK                  done
HUNK @@ -795,19 +799,19 @@ namespace ts {
HUNK                  getCompilerOptions: () => config.options,
HUNK                  getCurrentDirectory: () => state.currentDirectory,
HUNK                  emit: (writeFile: WriteFileCallback | undefined, customTransformers: CustomTransformers | undefined) => {
HUNK -                    if (step !== Step.EmitBundle) return invalidatedProjectOfBundle;
HUNK +                    if (step !== BuildStep.EmitBundle) return invalidatedProjectOfBundle;
HUNK                      return emitBundle(writeFile, customTransformers);
HUNK                  },
HUNK                  done,
HUNK              };
HUNK  
HUNK          function done(cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, customTransformers?: CustomTransformers) {
HUNK -            executeSteps(Step.Done, cancellationToken, writeFile, customTransformers);
HUNK +            executeSteps(BuildStep.Done, cancellationToken, writeFile, customTransformers);
HUNK              return doneInvalidatedProject(state, projectPath);
HUNK          }
HUNK  
HUNK          function withProgramOrUndefined<U>(action: (program: T) => U | undefined): U | undefined {
HUNK -            executeSteps(Step.CreateProgram);
HUNK +            executeSteps(BuildStep.CreateProgram);
HUNK              return program && action(program);
HUNK          }
HUNK  
HUNK @@ -821,7 +825,7 @@ namespace ts {
HUNK              if (state.options.dry) {
HUNK                  reportStatus(state, Diagnostics.A_non_dry_build_would_build_project_0, project);
HUNK                  buildResult = BuildResultFlags.Success;
HUNK -                step = Step.QueueReferencingProjects;
HUNK +                step = BuildStep.QueueReferencingProjects;
HUNK                  return;
HUNK              }
HUNK  
HUNK @@ -831,7 +835,7 @@ namespace ts {
HUNK                  reportAndStoreErrors(state, projectPath, getConfigFileParsingDiagnostics(config));
HUNK                  // Nothing to build - must be a solution file, basically
HUNK                  buildResult = BuildResultFlags.None;
HUNK -                step = Step.QueueReferencingProjects;
HUNK +                step = BuildStep.QueueReferencingProjects;
HUNK                  return;
HUNK              }
HUNK  
HUNK @@ -854,7 +858,7 @@ namespace ts {
HUNK  
HUNK          function handleDiagnostics(diagnostics: readonly Diagnostic[], errorFlags: BuildResultFlags, errorType: string) {
HUNK              if (diagnostics.length) {
HUNK -                buildResult = buildErrors(
HUNK +                ({ buildResult, step } = buildErrors(
HUNK                      state,
HUNK                      projectPath,
HUNK                      program,
HUNK @@ -862,8 +866,7 @@ namespace ts {
HUNK                      diagnostics,
HUNK                      errorFlags,
HUNK                      errorType
HUNK -                );
HUNK -                step = Step.QueueReferencingProjects;
HUNK +                ));
HUNK              }
HUNK              else {
HUNK                  step++;
HUNK @@ -894,7 +897,7 @@ namespace ts {
HUNK  
HUNK          function emit(writeFileCallback?: WriteFileCallback, cancellationToken?: CancellationToken, customTransformers?: CustomTransformers): EmitResult {
HUNK              Debug.assertIsDefined(program);
HUNK -            Debug.assert(step === Step.Emit);
HUNK +            Debug.assert(step === BuildStep.Emit);
HUNK              // Before emitting lets backup state, so we can revert it back if there are declaration errors to handle emit and declaration errors correctly
HUNK              program.backupState();
HUNK              let declDiagnostics: Diagnostic[] | undefined;
HUNK @@ -913,7 +916,7 @@ namespace ts {
HUNK              // Don't emit .d.ts if there are decl file errors
HUNK              if (declDiagnostics) {
HUNK                  program.restoreState();
HUNK -                buildResult = buildErrors(
HUNK +                ({ buildResult, step } = buildErrors(
HUNK                      state,
HUNK                      projectPath,
HUNK                      program,
HUNK @@ -921,8 +924,7 @@ namespace ts {
HUNK                      declDiagnostics,
HUNK                      BuildResultFlags.DeclarationEmitErrors,
HUNK                      "Declaration file"
HUNK -                );
HUNK -                step = Step.QueueReferencingProjects;
HUNK +                ));
HUNK                  return {
HUNK                      emitSkipped: true,
HUNK                      diagnostics: emitResult.diagnostics
HUNK @@ -967,6 +969,24 @@ namespace ts {
HUNK              return emitResult;
HUNK          }
HUNK  
HUNK +        function emitBuildInfo(writeFileCallback?: WriteFileCallback, cancellationToken?: CancellationToken): EmitResult {
HUNK +            Debug.assertIsDefined(program);
HUNK +            Debug.assert(step === BuildStep.EmitBuildInfo);
HUNK +            const emitResult = program.emitBuildInfo(writeFileCallback, cancellationToken);
HUNK +            if (emitResult.diagnostics.length) {
HUNK +                reportErrors(state, emitResult.diagnostics);
HUNK +                state.diagnostics.set(projectPath, [...state.diagnostics.get(projectPath)!, ...emitResult.diagnostics]);
HUNK +                buildResult = BuildResultFlags.EmitErrors & buildResult!;
HUNK +            }
HUNK +
HUNK +            if (emitResult.emittedFiles && state.writeFileName) {
HUNK +                emitResult.emittedFiles.forEach(name => listEmittedFile(state, config, name));
HUNK +            }
HUNK +            afterProgramDone(state, projectPath, program, config);
HUNK +            step = BuildStep.QueueReferencingProjects;
HUNK +            return emitResult;
HUNK +        }
HUNK +
HUNK          function finishEmit(
HUNK              emitterDiagnostics: DiagnosticCollection,
HUNK              emittedOutputs: FileMap<string>,
HUNK @@ -977,7 +997,7 @@ namespace ts {
HUNK          ) {
HUNK              const emitDiagnostics = emitterDiagnostics.getDiagnostics();
HUNK              if (emitDiagnostics.length) {
HUNK -                buildResult = buildErrors(
HUNK +                ({ buildResult, step } = buildErrors(
HUNK                      state,
HUNK                      projectPath,
HUNK                      program,
HUNK @@ -985,14 +1005,12 @@ namespace ts {
HUNK                      emitDiagnostics,
HUNK                      BuildResultFlags.EmitErrors,
HUNK                      "Emit"
HUNK -                );
HUNK -                step = Step.QueueReferencingProjects;
HUNK +                ));
HUNK                  return emitDiagnostics;
HUNK              }
HUNK  
HUNK              if (state.writeFileName) {
HUNK                  emittedOutputs.forEach(name => listEmittedFile(state, config, name));
HUNK -                if (program) listFiles(program, state.writeFileName);
HUNK              }
HUNK  
HUNK              // Update time stamps for rest of the outputs
HUNK @@ -1006,8 +1024,7 @@ namespace ts {
HUNK                  oldestOutputFileName
HUNK              });
HUNK              afterProgramDone(state, projectPath, program, config);
HUNK -            state.projectCompilerOptions = state.baseCompilerOptions;
HUNK -            step = Step.QueueReferencingProjects;
HUNK +            step = BuildStep.QueueReferencingProjects;
HUNK              buildResult = resultFlags;
HUNK              return emitDiagnostics;
HUNK          }
HUNK @@ -1017,7 +1034,7 @@ namespace ts {
HUNK              if (state.options.dry) {
HUNK                  reportStatus(state, Diagnostics.A_non_dry_build_would_update_output_of_project_0, project);
HUNK                  buildResult = BuildResultFlags.Success;
HUNK -                step = Step.QueueReferencingProjects;
HUNK +                step = BuildStep.QueueReferencingProjects;
HUNK                  return undefined;
HUNK              }
HUNK  
HUNK @@ -1038,7 +1055,7 @@ namespace ts {
HUNK  
HUNK              if (isString(outputFiles)) {
HUNK                  reportStatus(state, Diagnostics.Cannot_update_output_of_project_0_because_there_was_error_reading_file_1, project, relName(state, outputFiles));
HUNK -                step = Step.BuildInvalidatedProjectOfBundle;
HUNK +                step = BuildStep.BuildInvalidatedProjectOfBundle;
HUNK                  return invalidatedProjectOfBundle = createBuildOrUpdateInvalidedProject(
HUNK                      InvalidatedProjectKind.Build,
HUNK                      state,
HUNK @@ -1070,44 +1087,48 @@ namespace ts {
HUNK              return { emitSkipped: false, diagnostics: emitDiagnostics };
HUNK          }
HUNK  
HUNK -        function executeSteps(till: Step, cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, customTransformers?: CustomTransformers) {
HUNK -            while (step <= till && step < Step.Done) {
HUNK +        function executeSteps(till: BuildStep, cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, customTransformers?: CustomTransformers) {
HUNK +            while (step <= till && step < BuildStep.Done) {
HUNK                  const currentStep = step;
HUNK                  switch (step) {
HUNK -                    case Step.CreateProgram:
HUNK +                    case BuildStep.CreateProgram:
HUNK                          createProgram();
HUNK                          break;
HUNK  
HUNK -                    case Step.SyntaxDiagnostics:
HUNK +                    case BuildStep.SyntaxDiagnostics:
HUNK                          getSyntaxDiagnostics(cancellationToken);
HUNK                          break;
HUNK  
HUNK -                    case Step.SemanticDiagnostics:
HUNK +                    case BuildStep.SemanticDiagnostics:
HUNK                          getSemanticDiagnostics(cancellationToken);
HUNK                          break;
HUNK  
HUNK -                    case Step.Emit:
HUNK +                    case BuildStep.Emit:
HUNK                          emit(writeFile, cancellationToken, customTransformers);
HUNK                          break;
HUNK  
HUNK -                    case Step.EmitBundle:
HUNK +                    case BuildStep.EmitBuildInfo:
HUNK +                        emitBuildInfo(writeFile, cancellationToken);
HUNK +                        break;
HUNK +
HUNK +                    case BuildStep.EmitBundle:
HUNK                          emitBundle(writeFile, customTransformers);
HUNK                          break;
HUNK  
HUNK -                    case Step.BuildInvalidatedProjectOfBundle:
HUNK +                    case BuildStep.BuildInvalidatedProjectOfBundle:
HUNK                          Debug.checkDefined(invalidatedProjectOfBundle).done(cancellationToken);
HUNK -                        step = Step.Done;
HUNK +                        step = BuildStep.Done;
HUNK                          break;
HUNK  
HUNK -                    case Step.QueueReferencingProjects:
HUNK +                    case BuildStep.QueueReferencingProjects:
HUNK                          queueReferencingProjects(state, project, projectPath, projectIndex, config, buildOrder, Debug.checkDefined(buildResult));
HUNK                          step++;
HUNK                          break;
HUNK  
HUNK                      // Should never be done
HUNK -                    case Step.Done:
HUNK +                    case BuildStep.Done:
HUNK                      default:
HUNK -                        assertType<Step.Done>(step);
HUNK +                        assertType<BuildStep.Done>(step);
HUNK  
HUNK                  }
HUNK                  Debug.assert(step > currentStep);
HUNK @@ -1247,23 +1268,25 @@ namespace ts {
HUNK      }
HUNK  
HUNK      function afterProgramDone<T extends BuilderProgram>(
HUNK -        { host, watch, builderPrograms }: SolutionBuilderState<T>,
HUNK +        state: SolutionBuilderState<T>,
HUNK          proj: ResolvedConfigFilePath,
HUNK          program: T | undefined,
HUNK          config: ParsedCommandLine
HUNK      ) {
HUNK          if (program) {
HUNK -            if (host.afterProgramEmitAndDiagnostics) {
HUNK -                host.afterProgramEmitAndDiagnostics(program);
HUNK +            if (program && state.writeFileName) listFiles(program, state.writeFileName);
HUNK +            if (state.host.afterProgramEmitAndDiagnostics) {
HUNK +                state.host.afterProgramEmitAndDiagnostics(program);
HUNK              }
HUNK -            if (watch) {
HUNK +            if (state.watch) {
HUNK                  program.releaseProgram();
HUNK -                builderPrograms.set(proj, program);
HUNK +                state.builderPrograms.set(proj, program);
HUNK              }
HUNK          }
HUNK -        else if (host.afterEmitBundle) {
HUNK -            host.afterEmitBundle(config);
HUNK +        else if (state.host.afterEmitBundle) {
HUNK +            state.host.afterEmitBundle(config);
HUNK          }
HUNK +        state.projectCompilerOptions = state.baseCompilerOptions;
HUNK      }
HUNK  
HUNK      function buildErrors<T extends BuilderProgram>(
HUNK @@ -1272,16 +1295,17 @@ namespace ts {
HUNK          program: T | undefined,
HUNK          config: ParsedCommandLine,
HUNK          diagnostics: readonly Diagnostic[],
HUNK -        errorFlags: BuildResultFlags,
HUNK -        errorType: string
HUNK +        buildResult: BuildResultFlags,
HUNK +        errorType: string,
HUNK      ) {
HUNK +        const canEmitBuildInfo = !(buildResult & BuildResultFlags.SyntaxErrors) && program && !outFile(program.getCompilerOptions());
HUNK +
HUNK          reportAndStoreErrors(state, resolvedPath, diagnostics);
HUNK          // List files if any other build error using program (emit errors already report files)
HUNK -        if (program && state.writeFileName) listFiles(program, state.writeFileName);
HUNK          state.projectStatus.set(resolvedPath, { type: UpToDateStatusType.Unbuildable, reason: `${errorType} errors` });
HUNK +        if (canEmitBuildInfo) return { buildResult, step: BuildStep.EmitBuildInfo };
HUNK          afterProgramDone(state, resolvedPath, program, config);
HUNK -        state.projectCompilerOptions = state.baseCompilerOptions;
HUNK -        return errorFlags;
HUNK +        return { buildResult, step: BuildStep.QueueReferencingProjects };
HUNK      }
HUNK  
HUNK      function updateModuleResolutionCache(
DIFF diff --git a/src/compiler/watch.ts b/src/compiler/watch.ts
DIFF index c9e428468e..59b8e572e2 100644
DIFF --- a/src/compiler/watch.ts
DIFF +++ b/src/compiler/watch.ts
HUNK @@ -127,6 +127,7 @@ namespace ts {
HUNK          getDeclarationDiagnostics(sourceFile?: SourceFile, cancellationToken?: CancellationToken): readonly DiagnosticWithLocation[];
HUNK          getConfigFileParsingDiagnostics(): readonly Diagnostic[];
HUNK          emit(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers): EmitResult;
HUNK +        emitBuildInfo(writeFile?: WriteFileCallback, cancellationToken?: CancellationToken): EmitResult;
HUNK      }
HUNK  
HUNK      export function listFiles(program: ProgramToEmitFilesAndReportErrors, writeFileName: (s: string) => void) {
DIFF diff --git a/src/testRunner/unittests/tsbuild/helpers.ts b/src/testRunner/unittests/tsbuild/helpers.ts
DIFF index f6b1572ed8..9f9143f6a3 100644
DIFF --- a/src/testRunner/unittests/tsbuild/helpers.ts
DIFF +++ b/src/testRunner/unittests/tsbuild/helpers.ts
HUNK @@ -270,8 +270,8 @@ interface Symbol {
HUNK          baseFs: vfs.FileSystem;
HUNK          newSys: TscCompileSystem;
HUNK      }
HUNK -    function verifyIncrementalCorrectness(input: () => VerifyIncrementalCorrectness) {
HUNK -        it(`Verify emit output file text is same when built clean`, () => {
HUNK +    function verifyIncrementalCorrectness(input: () => VerifyIncrementalCorrectness, index: number) {
HUNK +        it(`Verify emit output file text is same when built clean for incremental scenario at:: ${index}`, () => {
HUNK              const {
HUNK                  scenario, subScenario, commandLineArgs,
HUNK                  modifyFs, incrementalModifyFs,
HUNK @@ -291,11 +291,42 @@ interface Symbol {
HUNK              for (const outputFile of arrayFrom(sys.writtenFiles.keys())) {
HUNK                  const expectedText = sys.readFile(outputFile);
HUNK                  const actualText = newSys.readFile(outputFile);
HUNK -                assert.equal(actualText, expectedText, `File: ${outputFile}`);
HUNK +                if (!isBuildInfoFile(outputFile)) {
HUNK +                    assert.equal(actualText, expectedText, `File: ${outputFile}`);
HUNK +                }
HUNK +                else if (actualText !== expectedText) {
HUNK +                    // Verify build info without affectedFilesPendingEmit
HUNK +                    const { text: actualBuildInfoText, affectedFilesPendingEmit: actualAffectedFilesPendingEmit } = getBuildInfoWithoutAffectedFilesPendingEmit(actualText);
HUNK +                    const { text: expectedBuildInfoText, affectedFilesPendingEmit: expectedAffectedFilesPendingEmit } = getBuildInfoWithoutAffectedFilesPendingEmit(expectedText);
HUNK +                    assert.equal(actualBuildInfoText, expectedBuildInfoText, `TsBuild info text without affectedFilesPendingEmit: ${outputFile}::\nIncremental buildInfoText:: ${actualText}\nClean buildInfoText:: ${expectedText}`);
HUNK +                    // Verify that incrementally pending affected file emit are in clean build since clean build can contain more files compared to incremental depending of noEmitOnError option
HUNK +                    if (actualAffectedFilesPendingEmit) {
HUNK +                        assert.isDefined(expectedAffectedFilesPendingEmit, `Incremental build contains affectedFilesPendingEmit, clean build should also have it: ${outputFile}::\nIncremental buildInfoText:: ${actualText}\nClean buildInfoText:: ${expectedText}`);
HUNK +                        let expectedIndex = 0;
HUNK +                        actualAffectedFilesPendingEmit.forEach(([actualFile]) => {
HUNK +                            expectedIndex = findIndex(expectedAffectedFilesPendingEmit!, ([expectedFile]) => actualFile === expectedFile, expectedIndex);
HUNK +                            assert.notEqual(expectedIndex, -1, `Incremental build contains ${actualFile} file as pending emit, clean build should also have it: ${outputFile}::\nIncremental buildInfoText:: ${actualText}\nClean buildInfoText:: ${expectedText}`);
HUNK +                            expectedIndex++;
HUNK +                        });
HUNK +                    }
HUNK +                }
HUNK              }
HUNK          });
HUNK      }
HUNK  
HUNK +    function getBuildInfoWithoutAffectedFilesPendingEmit(text: string | undefined): { text: string | undefined; affectedFilesPendingEmit?: ProgramBuildInfo["affectedFilesPendingEmit"]; } {
HUNK +        const buildInfo = text ? getBuildInfo(text) : undefined;
HUNK +        if (!buildInfo?.program?.affectedFilesPendingEmit) return { text };
HUNK +        const { program: { affectedFilesPendingEmit, ...programRest }, ...rest } = buildInfo;
HUNK +        return {
HUNK +            text: getBuildInfoText({
HUNK +                ...rest,
HUNK +                program: programRest
HUNK +            }),
HUNK +            affectedFilesPendingEmit
HUNK +        };
HUNK +    }
HUNK +
HUNK      export interface TscIncremental {
HUNK          buildKind: BuildKind;
HUNK          modifyFs: (fs: vfs.FileSystem) => void;
HUNK @@ -356,12 +387,12 @@ interface Symbol {
HUNK                  verifyTscBaseline(() => sys);
HUNK              });
HUNK  
HUNK -            for (const {
HUNK +            incrementalScenarios.forEach(({
HUNK                  buildKind,
HUNK                  modifyFs: incrementalModifyFs,
HUNK                  subScenario: incrementalSubScenario,
HUNK                  commandLineArgs: incrementalCommandLineArgs
HUNK -            } of incrementalScenarios) {
HUNK +            }, index) => {
HUNK                  describe(incrementalSubScenario || buildKind, () => {
HUNK                      let newSys: TscCompileSystem;
HUNK                      before(() => {
HUNK @@ -396,9 +427,9 @@ interface Symbol {
HUNK                          incrementalModifyFs,
HUNK                          modifyFs,
HUNK                          tick
HUNK -                    }));
HUNK +                    }), index);
HUNK                  });
HUNK -            }
HUNK +            });
HUNK          });
HUNK      }
HUNK  
HUNK @@ -497,7 +528,7 @@ interface Symbol {
HUNK                      },
HUNK                      modifyFs,
HUNK                      tick
HUNK -                })));
HUNK +                }), index));
HUNK              });
HUNK          });
HUNK      }
DIFF diff --git a/src/testRunner/unittests/tsbuild/inferredTypeFromTransitiveModule.ts b/src/testRunner/unittests/tsbuild/inferredTypeFromTransitiveModule.ts
DIFF index f5037f304c..eccd6e41ae 100644
DIFF --- a/src/testRunner/unittests/tsbuild/inferredTypeFromTransitiveModule.ts
DIFF +++ b/src/testRunner/unittests/tsbuild/inferredTypeFromTransitiveModule.ts
HUNK @@ -42,10 +42,17 @@ namespace ts {
HUNK  import { default as bar } from './bar';
HUNK  bar("hello");`);
HUNK              },
HUNK -            incrementalScenarios: [{
HUNK -                buildKind: BuildKind.IncrementalDtsChange,
HUNK -                modifyFs: changeBarParam
HUNK -            }]
HUNK +            incrementalScenarios: [
HUNK +                {
HUNK +                    buildKind: BuildKind.IncrementalDtsChange,
HUNK +                    modifyFs: changeBarParam
HUNK +                },
HUNK +                {
HUNK +                    subScenario: "Fix Error",
HUNK +                    buildKind: BuildKind.IncrementalDtsChange,
HUNK +                    modifyFs: fs => replaceText(fs, "/src/lazyIndex.ts", `bar("hello")`, "bar()")
HUNK +                },
HUNK +            ]
HUNK          });
HUNK      });
HUNK  
DIFF diff --git a/tests/baselines/reference/tsbuild/demo/initial-build/in-bad-ref-branch-reports-the-error-about-files-not-in-rootDir-at-the-import-location.js b/tests/baselines/reference/tsbuild/demo/initial-build/in-bad-ref-branch-reports-the-error-about-files-not-in-rootDir-at-the-import-location.js
DIFF index e70f1f9d5a..1efc8bd513 100644
DIFF --- a/tests/baselines/reference/tsbuild/demo/initial-build/in-bad-ref-branch-reports-the-error-about-files-not-in-rootDir-at-the-import-location.js
DIFF +++ b/tests/baselines/reference/tsbuild/demo/initial-build/in-bad-ref-branch-reports-the-error-about-files-not-in-rootDir-at-the-import-location.js
HUNK @@ -197,3 +197,111 @@ Found 7 errors.
HUNK  exitCode:: ExitStatus.DiagnosticsPresent_OutputsSkipped
HUNK  
HUNK  
HUNK +//// [/src/lib/core/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../../animals/animal.ts": {
HUNK +        "version": "-14984181202-export type Size = \"small\" | \"medium\" | \"large\";\r\nexport default interface Animal {\r\n    size: Size;\r\n}\r\n",
HUNK +        "signature": "13427676350-export declare type Size = \"small\" | \"medium\" | \"large\";\r\nexport default interface Animal {\r\n    size: Size;\r\n}\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../animals/dog.ts": {
HUNK +        "version": "-10991948013-import Animal from '.';\r\nimport { makeRandomName } from '../core/utilities';\r\n\r\nexport interface Dog extends Animal {\r\n    woof(): void;\r\n    name: string;\r\n}\r\n\r\nexport function createDog(): Dog {\r\n    return ({\r\n        size: \"medium\",\r\n        woof: function(this: Dog) {\r\n            console.log(`${this.name} says \"Woof\"!`);\r\n        },\r\n        name: makeRandomName()\r\n    });\r\n}\r\n\r\n",
HUNK +        "signature": "10854678623-import Animal from '.';\r\nexport interface Dog extends Animal {\r\n    woof(): void;\r\n    name: string;\r\n}\r\nexport declare function createDog(): Dog;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../animals/index.ts": {
HUNK +        "version": "-5382672599-import Animal from './animal';\r\n\r\nexport default Animal;\r\nimport { createDog, Dog } from './dog';\r\nexport { createDog, Dog };\r\n",
HUNK +        "signature": "4477582546-import Animal from './animal';\r\nexport default Animal;\r\nimport { createDog, Dog } from './dog';\r\nexport { createDog, Dog };\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../core/utilities.ts": {
HUNK +        "version": "-15713992787-import * as A from '../animals';\n\r\nexport function makeRandomName() {\r\n    return \"Bob!?! \";\r\n}\r\n\r\nexport function lastElementOf<T>(arr: T[]): T | undefined {\r\n    if (arr.length === 0) return undefined;\r\n    return arr[arr.length - 1];\r\n}\r\n\r\n",
HUNK +        "signature": "-8177343116-export declare function makeRandomName(): string;\r\nexport declare function lastElementOf<T>(arr: T[]): T | undefined;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "declaration": true,
HUNK +      "target": 1,
HUNK +      "module": 1,
HUNK +      "strict": true,
HUNK +      "noUnusedLocals": true,
HUNK +      "noUnusedParameters": true,
HUNK +      "noImplicitReturns": true,
HUNK +      "noFallthroughCasesInSwitch": true,
HUNK +      "composite": true,
HUNK +      "outDir": "./",
HUNK +      "rootDir": "../../core",
HUNK +      "configFilePath": "../../core/tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../../animals/dog.ts": [
HUNK +        "../../animals/index.ts",
HUNK +        "../../core/utilities.ts"
HUNK +      ],
HUNK +      "../../animals/index.ts": [
HUNK +        "../../animals/animal.ts",
HUNK +        "../../animals/dog.ts"
HUNK +      ],
HUNK +      "../../core/utilities.ts": [
HUNK +        "../../animals/index.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "../../animals/dog.ts": [
HUNK +        "../../animals/index.ts"
HUNK +      ],
HUNK +      "../../animals/index.ts": [
HUNK +        "../../animals/animal.ts",
HUNK +        "../../animals/dog.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../lib/lib.d.ts",
HUNK +      "../../animals/animal.ts",
HUNK +      "../../animals/dog.ts",
HUNK +      "../../animals/index.ts",
HUNK +      [
HUNK +        "../../core/utilities.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../../core/utilities.ts",
HUNK +            "start": 0,
HUNK +            "length": 32,
HUNK +            "messageText": "'A' is declared but its value is never read.",
HUNK +            "category": 1,
HUNK +            "code": 6133,
HUNK +            "reportsUnnecessary": true
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../../animals/animal.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../animals/dog.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../animals/index.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../core/utilities.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/initial-build/reports-errors-in-files-affected-by-change-in-signature-with-isolatedModules.js b/tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/initial-build/reports-errors-in-files-affected-by-change-in-signature-with-isolatedModules.js
DIFF index abc2adbd83..000e53f1e6 100644
DIFF --- a/tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/initial-build/reports-errors-in-files-affected-by-change-in-signature-with-isolatedModules.js
DIFF +++ b/tests/baselines/reference/tsbuild/inferredTypeFromTransitiveModule/initial-build/reports-errors-in-files-affected-by-change-in-signature-with-isolatedModules.js
HUNK @@ -264,3 +264,228 @@ Found 1 error.
HUNK  exitCode:: ExitStatus.DiagnosticsPresent_OutputsSkipped
HUNK  
HUNK  
HUNK +//// [/src/obj/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../bar.ts": {
HUNK +        "version": "747071916-interface RawAction {\r\n    (...args: any[]): Promise<any> | void;\r\n}\r\ninterface ActionFactory {\r\n    <T extends RawAction>(target: T): T;\r\n}\r\ndeclare function foo<U extends any[] = any[]>(): ActionFactory;\r\nexport default foo()(function foobar(): void {\r\n});",
HUNK +        "signature": "-9232740537-declare const _default: () => void;\r\nexport default _default;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../bundling.ts": {
HUNK +        "version": "-21659820217-export class LazyModule<TModule> {\r\n    constructor(private importCallback: () => Promise<TModule>) {}\r\n}\r\n\r\nexport class LazyAction<\r\n    TAction extends (...args: any[]) => any,\r\n    TModule\r\n>  {\r\n    constructor(_lazyModule: LazyModule<TModule>, _getter: (module: TModule) => TAction) {\r\n    }\r\n}\r\n",
HUNK +        "signature": "-40032907372-export declare class LazyModule<TModule> {\r\n    private importCallback;\r\n    constructor(importCallback: () => Promise<TModule>);\r\n}\r\nexport declare class LazyAction<TAction extends (...args: any[]) => any, TModule> {\r\n    constructor(_lazyModule: LazyModule<TModule>, _getter: (module: TModule) => TAction);\r\n}\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../global.d.ts": {
HUNK +        "version": "-9780226215-interface PromiseConstructor {\r\n    new <T>(): Promise<T>;\r\n}\r\ndeclare var Promise: PromiseConstructor;\r\ninterface Promise<T> {\r\n}",
HUNK +        "signature": "-9780226215-interface PromiseConstructor {\r\n    new <T>(): Promise<T>;\r\n}\r\ndeclare var Promise: PromiseConstructor;\r\ninterface Promise<T> {\r\n}",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../lazyindex.ts": {
HUNK +        "version": "3017320451-export { default as bar } from './bar';\n\nimport { default as bar } from './bar';\nbar(\"hello\");",
HUNK +        "signature": "-6224542381-export { default as bar } from './bar';\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../index.ts": {
HUNK +        "version": "-11602502901-import { LazyAction, LazyModule } from './bundling';\r\nconst lazyModule = new LazyModule(() =>\r\n    import('./lazyIndex')\r\n);\r\nexport const lazyBar = new LazyAction(lazyModule, m => m.bar);",
HUNK +        "signature": "6256067474-import { LazyAction } from './bundling';\r\nexport declare const lazyBar: LazyAction<() => void, typeof import(\"./lazyIndex\")>;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "target": 1,
HUNK +      "declaration": true,
HUNK +      "outDir": "./",
HUNK +      "incremental": true,
HUNK +      "isolatedModules": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../index.ts": [
HUNK +        "../bundling.ts",
HUNK +        "../lazyindex.ts"
HUNK +      ],
HUNK +      "../lazyindex.ts": [
HUNK +        "../bar.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "../index.ts": [
HUNK +        "../bundling.ts",
HUNK +        "../lazyindex.ts"
HUNK +      ],
HUNK +      "../lazyindex.ts": [
HUNK +        "../bar.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../bar.ts",
HUNK +      "../bundling.ts",
HUNK +      "../global.d.ts",
HUNK +      "../index.ts",
HUNK +      [
HUNK +        "../lazyindex.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../lazyindex.ts",
HUNK +            "start": 85,
HUNK +            "length": 7,
HUNK +            "messageText": "Expected 0 arguments, but got 1.",
HUNK +            "category": 1,
HUNK +            "code": 2554
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../bar.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../index.ts",
HUNK +        0
HUNK +      ],
HUNK +      [
HUNK +        "../lazyindex.ts",
HUNK +        0
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK +
HUNK +
HUNK +Change:: Fix Error
HUNK +Input::
HUNK +//// [/src/lazyIndex.ts]
HUNK +export { default as bar } from './bar';
HUNK +
HUNK +import { default as bar } from './bar';
HUNK +bar();
HUNK +
HUNK +
HUNK +
HUNK +Output::
HUNK +/lib/tsc --b /src --verbose
HUNK +[[90m12:07:00 AM[0m] Projects in this build: 
HUNK +    * src/tsconfig.json
HUNK +
HUNK +[[90m12:07:00 AM[0m] Project 'src/tsconfig.json' is out of date because oldest output 'src/obj/bar.js' is older than newest input 'src/lazyIndex.ts'
HUNK +
HUNK +[[90m12:07:00 AM[0m] Building project '/src/tsconfig.json'...
HUNK +
HUNK +[[90m12:07:00 AM[0m] Updating unchanged output timestamps of project '/src/tsconfig.json'...
HUNK +
HUNK +exitCode:: ExitStatus.Success
HUNK +
HUNK +
HUNK +//// [/src/obj/bar.d.ts]
HUNK +declare const _default: () => void;
HUNK +export default _default;
HUNK +
HUNK +
HUNK +//// [/src/obj/bar.js]
HUNK +"use strict";
HUNK +Object.defineProperty(exports, "__esModule", { value: true });
HUNK +exports.default = foo()(function foobar() {
HUNK +});
HUNK +
HUNK +
HUNK +//// [/src/obj/index.d.ts]
HUNK +import { LazyAction } from './bundling';
HUNK +export declare const lazyBar: LazyAction<() => void, typeof import("./lazyIndex")>;
HUNK +
HUNK +
HUNK +//// [/src/obj/lazyIndex.d.ts] file written with same contents
HUNK +//// [/src/obj/lazyIndex.js]
HUNK +"use strict";
HUNK +Object.defineProperty(exports, "__esModule", { value: true });
HUNK +var bar_1 = require("./bar");
HUNK +Object.defineProperty(exports, "bar", { enumerable: true, get: function () { return bar_1.default; } });
HUNK +var bar_2 = require("./bar");
HUNK +bar_2.default();
HUNK +
HUNK +
HUNK +//// [/src/obj/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../bar.ts": {
HUNK +        "version": "747071916-interface RawAction {\r\n    (...args: any[]): Promise<any> | void;\r\n}\r\ninterface ActionFactory {\r\n    <T extends RawAction>(target: T): T;\r\n}\r\ndeclare function foo<U extends any[] = any[]>(): ActionFactory;\r\nexport default foo()(function foobar(): void {\r\n});",
HUNK +        "signature": "-9232740537-declare const _default: () => void;\r\nexport default _default;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../bundling.ts": {
HUNK +        "version": "-21659820217-export class LazyModule<TModule> {\r\n    constructor(private importCallback: () => Promise<TModule>) {}\r\n}\r\n\r\nexport class LazyAction<\r\n    TAction extends (...args: any[]) => any,\r\n    TModule\r\n>  {\r\n    constructor(_lazyModule: LazyModule<TModule>, _getter: (module: TModule) => TAction) {\r\n    }\r\n}\r\n",
HUNK +        "signature": "-40032907372-export declare class LazyModule<TModule> {\r\n    private importCallback;\r\n    constructor(importCallback: () => Promise<TModule>);\r\n}\r\nexport declare class LazyAction<TAction extends (...args: any[]) => any, TModule> {\r\n    constructor(_lazyModule: LazyModule<TModule>, _getter: (module: TModule) => TAction);\r\n}\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../global.d.ts": {
HUNK +        "version": "-9780226215-interface PromiseConstructor {\r\n    new <T>(): Promise<T>;\r\n}\r\ndeclare var Promise: PromiseConstructor;\r\ninterface Promise<T> {\r\n}",
HUNK +        "signature": "-9780226215-interface PromiseConstructor {\r\n    new <T>(): Promise<T>;\r\n}\r\ndeclare var Promise: PromiseConstructor;\r\ninterface Promise<T> {\r\n}",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../lazyindex.ts": {
HUNK +        "version": "-3721262293-export { default as bar } from './bar';\n\nimport { default as bar } from './bar';\nbar();",
HUNK +        "signature": "-6224542381-export { default as bar } from './bar';\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../index.ts": {
HUNK +        "version": "-11602502901-import { LazyAction, LazyModule } from './bundling';\r\nconst lazyModule = new LazyModule(() =>\r\n    import('./lazyIndex')\r\n);\r\nexport const lazyBar = new LazyAction(lazyModule, m => m.bar);",
HUNK +        "signature": "6256067474-import { LazyAction } from './bundling';\r\nexport declare const lazyBar: LazyAction<() => void, typeof import(\"./lazyIndex\")>;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "target": 1,
HUNK +      "declaration": true,
HUNK +      "outDir": "./",
HUNK +      "incremental": true,
HUNK +      "isolatedModules": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../index.ts": [
HUNK +        "../bundling.ts",
HUNK +        "../lazyindex.ts"
HUNK +      ],
HUNK +      "../lazyindex.ts": [
HUNK +        "../bar.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "../index.ts": [
HUNK +        "../bundling.ts",
HUNK +        "../lazyindex.ts"
HUNK +      ],
HUNK +      "../lazyindex.ts": [
HUNK +        "../bar.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../bar.ts",
HUNK +      "../bundling.ts",
HUNK +      "../global.d.ts",
HUNK +      "../index.ts",
HUNK +      "../lazyindex.ts"
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/noEmitOnError/initial-build/semantic-errors-with-incremental.js b/tests/baselines/reference/tsbuild/noEmitOnError/initial-build/semantic-errors-with-incremental.js
DIFF index 091e9d94ba..807e97f2c3 100644
DIFF --- a/tests/baselines/reference/tsbuild/noEmitOnError/initial-build/semantic-errors-with-incremental.js
DIFF +++ b/tests/baselines/reference/tsbuild/noEmitOnError/initial-build/semantic-errors-with-incremental.js
HUNK @@ -64,6 +64,79 @@ Semantic diagnostics in builder refreshed for::
HUNK  /src/src/other.ts
HUNK  
HUNK  
HUNK +//// [/src/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-6245214333-export interface A {\r\n    name: string;\r\n}\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-4882119183-export {};\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-4882119183-export {};\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  
HUNK  Change:: no-change-run
HUNK @@ -90,10 +163,6 @@ Program files::
HUNK  /src/src/other.ts
HUNK  
HUNK  Semantic diagnostics in builder refreshed for::
HUNK -/lib/lib.d.ts
HUNK -/src/shared/types/db.ts
HUNK -/src/src/main.ts
HUNK -/src/src/other.ts
HUNK  
HUNK  
HUNK  
HUNK @@ -118,10 +187,7 @@ Program files::
HUNK  /src/src/other.ts
HUNK  
HUNK  Semantic diagnostics in builder refreshed for::
HUNK -/lib/lib.d.ts
HUNK -/src/shared/types/db.ts
HUNK  /src/src/main.ts
HUNK -/src/src/other.ts
HUNK  
HUNK  
HUNK  //// [/src/dev-build/shared/types/db.js]
DIFF diff --git a/tests/baselines/reference/tsbuild/resolveJsonModule/initial-build/include-only.js b/tests/baselines/reference/tsbuild/resolveJsonModule/initial-build/include-only.js
DIFF index e1d0659797..408fd4c552 100644
DIFF --- a/tests/baselines/reference/tsbuild/resolveJsonModule/initial-build/include-only.js
DIFF +++ b/tests/baselines/reference/tsbuild/resolveJsonModule/initial-build/include-only.js
HUNK @@ -65,3 +65,59 @@ Found 1 error.
HUNK  exitCode:: ExitStatus.DiagnosticsPresent_OutputsSkipped
HUNK  
HUNK  
HUNK +//// [/src/dist/tsconfig_withInclude.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../src/hello.json": {
HUNK +        "version": "6651571919-{\n  \"hello\": \"world\"\n}",
HUNK +        "signature": "-4341462827-export declare const hello: string;\r\n",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../src/index.ts": {
HUNK +        "version": "-27703454282-import hello from \"./hello.json\"\n\nexport default hello.hello",
HUNK +        "signature": "-1680156224-declare const _default: string;\r\nexport default _default;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "moduleResolution": 2,
HUNK +      "module": 1,
HUNK +      "resolveJsonModule": true,
HUNK +      "esModuleInterop": true,
HUNK +      "allowSyntheticDefaultImports": true,
HUNK +      "outDir": "./",
HUNK +      "skipDefaultLibCheck": true,
HUNK +      "configFilePath": "../tsconfig_withInclude.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/index.ts": [
HUNK +        "../src/hello.json"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../src/hello.json",
HUNK +      "../src/index.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/hello.json",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/index.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/sample1/initial-build/does-not-build-downstream-projects-if-upstream-projects-have-errors.js b/tests/baselines/reference/tsbuild/sample1/initial-build/does-not-build-downstream-projects-if-upstream-projects-have-errors.js
DIFF index 20dc078260..d988e83869 100644
DIFF --- a/tests/baselines/reference/tsbuild/sample1/initial-build/does-not-build-downstream-projects-if-upstream-projects-have-errors.js
DIFF +++ b/tests/baselines/reference/tsbuild/sample1/initial-build/does-not-build-downstream-projects-if-upstream-projects-have-errors.js
HUNK @@ -196,3 +196,83 @@ exports.multiply = multiply;
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/src/logic/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../core/index.d.ts": {
HUNK +        "version": "-13851440507-export declare const someString: string;\r\nexport declare function leftPad(s: string, n: number): string;\r\nexport declare function multiply(a: number, b: number): number;\r\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "signature": "-13851440507-export declare const someString: string;\r\nexport declare function leftPad(s: string, n: number): string;\r\nexport declare function multiply(a: number, b: number): number;\r\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../core/anothermodule.d.ts": {
HUNK +        "version": "7652028357-export declare const World = \"hello\";\r\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "signature": "7652028357-export declare const World = \"hello\";\r\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "./index.ts": {
HUNK +        "version": "-6409874073-import * as c from '../core/index';\r\nexport function getSecondsInDay() {\r\n    return c.muitply();\r\n}\r\nimport * as mod from '../core/anotherModule';\r\nexport const m = mod;\r\n",
HUNK +        "signature": "-4761685354-export declare function getSecondsInDay(): any;\r\nimport * as mod from '../core/anotherModule';\r\nexport declare const m: typeof mod;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "declaration": true,
HUNK +      "sourceMap": true,
HUNK +      "forceConsistentCasingInFileNames": true,
HUNK +      "skipDefaultLibCheck": true,
HUNK +      "configFilePath": "./tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "./index.ts": [
HUNK +        "../core/anothermodule.d.ts",
HUNK +        "../core/index.d.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "./index.ts": [
HUNK +        "../core/anothermodule.d.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../core/anothermodule.d.ts",
HUNK +      "../core/index.d.ts",
HUNK +      [
HUNK +        "./index.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "./index.ts",
HUNK +            "start": 87,
HUNK +            "length": 7,
HUNK +            "code": 2339,
HUNK +            "category": 1,
HUNK +            "messageText": "Property 'muitply' does not exist on type 'typeof import(\"/src/core/index\")'."
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../core/anothermodule.d.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../core/index.d.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "./index.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/transitiveReferences/initial-build/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js b/tests/baselines/reference/tsbuild/transitiveReferences/initial-build/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js
DIFF index 10a5f43474..1bc69c6c72 100644
DIFF --- a/tests/baselines/reference/tsbuild/transitiveReferences/initial-build/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js
DIFF +++ b/tests/baselines/reference/tsbuild/transitiveReferences/initial-build/reports-error-about-module-not-found-with-node-resolution-with-external-module-name.js
HUNK @@ -114,3 +114,52 @@ exports.A = A;
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/src/tsconfig.b.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "./b.ts": {
HUNK +        "version": "-17186364832-import {A} from 'a';\nexport const b = new A();",
HUNK +        "signature": "-6598996556-export declare const b: any;\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "moduleResolution": 2,
HUNK +      "listFiles": true,
HUNK +      "configFilePath": "./tsconfig.b.json"
HUNK +    },
HUNK +    "referencedMap": {},
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../lib/lib.d.ts",
HUNK +      [
HUNK +        "./b.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "./b.ts",
HUNK +            "start": 16,
HUNK +            "length": 3,
HUNK +            "messageText": "Cannot find module 'a' or its corresponding type declarations.",
HUNK +            "category": 1,
HUNK +            "code": 2307
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "./b.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/watchMode/demo/updates-with-bad-reference.js b/tests/baselines/reference/tsbuild/watchMode/demo/updates-with-bad-reference.js
DIFF index a226331508..d13fc00f24 100644
DIFF --- a/tests/baselines/reference/tsbuild/watchMode/demo/updates-with-bad-reference.js
DIFF +++ b/tests/baselines/reference/tsbuild/watchMode/demo/updates-with-bad-reference.js
HUNK @@ -204,19 +204,19 @@ Output::
HUNK  [7m [0m [91m                   ~~~~~~~~~~~~[0m
HUNK  
HUNK  
HUNK -[[90m12:00:50 AM[0m] Project 'animals/tsconfig.json' can't be built because its dependency 'core' has errors
HUNK +[[90m12:00:57 AM[0m] Project 'animals/tsconfig.json' can't be built because its dependency 'core' has errors
HUNK  
HUNK  
HUNK -[[90m12:00:51 AM[0m] Skipping build of project '/user/username/projects/demo/animals/tsconfig.json' because its dependency '/user/username/projects/demo/core' has errors
HUNK +[[90m12:00:58 AM[0m] Skipping build of project '/user/username/projects/demo/animals/tsconfig.json' because its dependency '/user/username/projects/demo/core' has errors
HUNK  
HUNK  
HUNK -[[90m12:00:52 AM[0m] Project 'zoo/tsconfig.json' can't be built because its dependency 'animals' was not built
HUNK +[[90m12:00:59 AM[0m] Project 'zoo/tsconfig.json' can't be built because its dependency 'animals' was not built
HUNK  
HUNK  
HUNK -[[90m12:00:53 AM[0m] Skipping build of project '/user/username/projects/demo/zoo/tsconfig.json' because its dependency '/user/username/projects/demo/animals' was not built
HUNK +[[90m12:01:00 AM[0m] Skipping build of project '/user/username/projects/demo/zoo/tsconfig.json' because its dependency '/user/username/projects/demo/animals' was not built
HUNK  
HUNK  
HUNK -[[90m12:00:54 AM[0m] Found 7 errors. Watching for file changes.
HUNK +[[90m12:01:01 AM[0m] Found 7 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -268,6 +268,115 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/demo/lib/core/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../../animals/animal.ts": {
HUNK +        "version": "-14984181202-export type Size = \"small\" | \"medium\" | \"large\";\r\nexport default interface Animal {\r\n    size: Size;\r\n}\r\n",
HUNK +        "signature": "-10510161654-export declare type Size = \"small\" | \"medium\" | \"large\";\nexport default interface Animal {\n    size: Size;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../animals/dog.ts": {
HUNK +        "version": "-10991948013-import Animal from '.';\r\nimport { makeRandomName } from '../core/utilities';\r\n\r\nexport interface Dog extends Animal {\r\n    woof(): void;\r\n    name: string;\r\n}\r\n\r\nexport function createDog(): Dog {\r\n    return ({\r\n        size: \"medium\",\r\n        woof: function(this: Dog) {\r\n            console.log(`${this.name} says \"Woof\"!`);\r\n        },\r\n        name: makeRandomName()\r\n    });\r\n}\r\n\r\n",
HUNK +        "signature": "6032048049-import Animal from '.';\nexport interface Dog extends Animal {\n    woof(): void;\n    name: string;\n}\nexport declare function createDog(): Dog;\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../animals/index.ts": {
HUNK +        "version": "-5382672599-import Animal from './animal';\r\n\r\nexport default Animal;\r\nimport { createDog, Dog } from './dog';\r\nexport { createDog, Dog };\r\n",
HUNK +        "signature": "1096904574-import Animal from './animal';\nexport default Animal;\nimport { createDog, Dog } from './dog';\nexport { createDog, Dog };\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../core/utilities.ts": {
HUNK +        "version": "-15713992787-import * as A from '../animals';\n\r\nexport function makeRandomName() {\r\n    return \"Bob!?! \";\r\n}\r\n\r\nexport function lastElementOf<T>(arr: T[]): T | undefined {\r\n    if (arr.length === 0) return undefined;\r\n    return arr[arr.length - 1];\r\n}\r\n\r\n",
HUNK +        "signature": "-11345568166-export declare function makeRandomName(): string;\nexport declare function lastElementOf<T>(arr: T[]): T | undefined;\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "declaration": true,
HUNK +      "target": 1,
HUNK +      "module": 1,
HUNK +      "strict": true,
HUNK +      "noUnusedLocals": true,
HUNK +      "noUnusedParameters": true,
HUNK +      "noImplicitReturns": true,
HUNK +      "noFallthroughCasesInSwitch": true,
HUNK +      "composite": true,
HUNK +      "outDir": "./",
HUNK +      "rootDir": "../../core",
HUNK +      "watch": true,
HUNK +      "configFilePath": "../../core/tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../../animals/dog.ts": [
HUNK +        "../../animals/index.ts",
HUNK +        "../../core/utilities.ts"
HUNK +      ],
HUNK +      "../../animals/index.ts": [
HUNK +        "../../animals/animal.ts",
HUNK +        "../../animals/dog.ts"
HUNK +      ],
HUNK +      "../../core/utilities.ts": [
HUNK +        "../../animals/index.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "../../animals/dog.ts": [
HUNK +        "../../animals/index.ts"
HUNK +      ],
HUNK +      "../../animals/index.ts": [
HUNK +        "../../animals/animal.ts",
HUNK +        "../../animals/dog.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../../a/lib/lib.d.ts",
HUNK +      "../../animals/animal.ts",
HUNK +      "../../animals/dog.ts",
HUNK +      "../../animals/index.ts",
HUNK +      [
HUNK +        "../../core/utilities.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../../core/utilities.ts",
HUNK +            "start": 0,
HUNK +            "length": 32,
HUNK +            "messageText": "'A' is declared but its value is never read.",
HUNK +            "category": 1,
HUNK +            "code": 6133,
HUNK +            "reportsUnnecessary": true
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../../animals/animal.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../animals/dog.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../animals/index.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../core/utilities.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: Prepend a line
HUNK  
HUNK @@ -290,13 +399,13 @@ export function lastElementOf<T>(arr: T[]): T | undefined {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:58 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:05 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:00:59 AM[0m] Project 'core/tsconfig.json' is out of date because output file 'lib/core/utilities.js' does not exist
HUNK +[[90m12:01:06 AM[0m] Project 'core/tsconfig.json' is out of date because output file 'lib/core/utilities.js' does not exist
HUNK  
HUNK  
HUNK -[[90m12:01:00 AM[0m] Building project '/user/username/projects/demo/core/tsconfig.json'...
HUNK +[[90m12:01:07 AM[0m] Building project '/user/username/projects/demo/core/tsconfig.json'...
HUNK  
HUNK  
HUNK  [96manimals/index.ts[0m:[93m1[0m:[93m20[0m - [91merror[0m[90m TS6059: [0mFile '/user/username/projects/demo/animals/animal.ts' is not under 'rootDir' '/user/username/projects/demo/core'. 'rootDir' is expected to contain all source files.
HUNK @@ -341,7 +450,7 @@ Output::
HUNK  [7m [0m [91m                   ~~~~~~~~~~~~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:01 AM[0m] Found 7 errors. Watching for file changes.
HUNK +[[90m12:01:11 AM[0m] Found 7 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -389,3 +498,112 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/demo/lib/core/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../../animals/animal.ts": {
HUNK +        "version": "-14984181202-export type Size = \"small\" | \"medium\" | \"large\";\r\nexport default interface Animal {\r\n    size: Size;\r\n}\r\n",
HUNK +        "signature": "-10510161654-export declare type Size = \"small\" | \"medium\" | \"large\";\nexport default interface Animal {\n    size: Size;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../animals/dog.ts": {
HUNK +        "version": "-10991948013-import Animal from '.';\r\nimport { makeRandomName } from '../core/utilities';\r\n\r\nexport interface Dog extends Animal {\r\n    woof(): void;\r\n    name: string;\r\n}\r\n\r\nexport function createDog(): Dog {\r\n    return ({\r\n        size: \"medium\",\r\n        woof: function(this: Dog) {\r\n            console.log(`${this.name} says \"Woof\"!`);\r\n        },\r\n        name: makeRandomName()\r\n    });\r\n}\r\n\r\n",
HUNK +        "signature": "6032048049-import Animal from '.';\nexport interface Dog extends Animal {\n    woof(): void;\n    name: string;\n}\nexport declare function createDog(): Dog;\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../animals/index.ts": {
HUNK +        "version": "-5382672599-import Animal from './animal';\r\n\r\nexport default Animal;\r\nimport { createDog, Dog } from './dog';\r\nexport { createDog, Dog };\r\n",
HUNK +        "signature": "1096904574-import Animal from './animal';\nexport default Animal;\nimport { createDog, Dog } from './dog';\nexport { createDog, Dog };\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../../core/utilities.ts": {
HUNK +        "version": "-10926881769-\nimport * as A from '../animals';\n\r\nexport function makeRandomName() {\r\n    return \"Bob!?! \";\r\n}\r\n\r\nexport function lastElementOf<T>(arr: T[]): T | undefined {\r\n    if (arr.length === 0) return undefined;\r\n    return arr[arr.length - 1];\r\n}\r\n\r\n",
HUNK +        "signature": "-11345568166-export declare function makeRandomName(): string;\nexport declare function lastElementOf<T>(arr: T[]): T | undefined;\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "declaration": true,
HUNK +      "target": 1,
HUNK +      "module": 1,
HUNK +      "strict": true,
HUNK +      "noUnusedLocals": true,
HUNK +      "noUnusedParameters": true,
HUNK +      "noImplicitReturns": true,
HUNK +      "noFallthroughCasesInSwitch": true,
HUNK +      "composite": true,
HUNK +      "outDir": "./",
HUNK +      "rootDir": "../../core",
HUNK +      "watch": true,
HUNK +      "configFilePath": "../../core/tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../../animals/dog.ts": [
HUNK +        "../../animals/index.ts",
HUNK +        "../../core/utilities.ts"
HUNK +      ],
HUNK +      "../../animals/index.ts": [
HUNK +        "../../animals/animal.ts",
HUNK +        "../../animals/dog.ts"
HUNK +      ],
HUNK +      "../../core/utilities.ts": [
HUNK +        "../../animals/index.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "../../animals/dog.ts": [
HUNK +        "../../animals/index.ts"
HUNK +      ],
HUNK +      "../../animals/index.ts": [
HUNK +        "../../animals/animal.ts",
HUNK +        "../../animals/dog.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../../a/lib/lib.d.ts",
HUNK +      "../../animals/animal.ts",
HUNK +      "../../animals/dog.ts",
HUNK +      "../../animals/index.ts",
HUNK +      [
HUNK +        "../../core/utilities.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../../core/utilities.ts",
HUNK +            "start": 1,
HUNK +            "length": 32,
HUNK +            "messageText": "'A' is declared but its value is never read.",
HUNK +            "category": 1,
HUNK +            "code": 6133,
HUNK +            "reportsUnnecessary": true
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../../animals/animal.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../animals/dog.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../animals/index.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../../core/utilities.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/watchMode/noEmitOnError/does-not-emit-any-files-on-error-with-incremental.js b/tests/baselines/reference/tsbuild/watchMode/noEmitOnError/does-not-emit-any-files-on-error-with-incremental.js
DIFF index 49d3e41dac..8d493f6a20 100644
DIFF --- a/tests/baselines/reference/tsbuild/watchMode/noEmitOnError/does-not-emit-any-files-on-error-with-incremental.js
DIFF +++ b/tests/baselines/reference/tsbuild/watchMode/noEmitOnError/does-not-emit-any-files-on-error-with-incremental.js
HUNK @@ -309,7 +309,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:14 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:17 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -342,6 +342,72 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -350,13 +416,13 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:18 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:21 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:19 AM[0m] Project 'tsconfig.json' is out of date because oldest output 'dev-build/shared/types/db.js' is older than newest input 'src/main.ts'
HUNK +[[90m12:01:22 AM[0m] Project 'tsconfig.json' is out of date because oldest output 'dev-build/shared/types/db.js' is older than newest input 'src/main.ts'
HUNK  
HUNK  
HUNK -[[90m12:01:20 AM[0m] Building project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK +[[90m12:01:23 AM[0m] Building project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -365,7 +431,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:21 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:24 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -408,19 +474,19 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:25 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:28 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:26 AM[0m] Project 'tsconfig.json' is out of date because oldest output 'dev-build/shared/types/db.js' is older than newest input 'src/main.ts'
HUNK +[[90m12:01:29 AM[0m] Project 'tsconfig.json' is out of date because oldest output 'dev-build/shared/types/db.js' is older than newest input 'src/main.ts'
HUNK  
HUNK  
HUNK -[[90m12:01:27 AM[0m] Building project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK +[[90m12:01:30 AM[0m] Building project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK  
HUNK  
HUNK -[[90m12:01:35 AM[0m] Updating unchanged output timestamps of project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK +[[90m12:01:38 AM[0m] Updating unchanged output timestamps of project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK  
HUNK  
HUNK -[[90m12:01:36 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:39 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -517,19 +583,19 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:40 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:43 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:41 AM[0m] Project 'tsconfig.json' is out of date because oldest output 'dev-build/shared/types/db.js' is older than newest input 'src/main.ts'
HUNK +[[90m12:01:44 AM[0m] Project 'tsconfig.json' is out of date because oldest output 'dev-build/shared/types/db.js' is older than newest input 'src/main.ts'
HUNK  
HUNK  
HUNK -[[90m12:01:42 AM[0m] Building project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK +[[90m12:01:45 AM[0m] Building project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK  
HUNK  
HUNK -[[90m12:01:44 AM[0m] Updating unchanged output timestamps of project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK +[[90m12:01:47 AM[0m] Updating unchanged output timestamps of project '/user/username/projects/noEmitOnError/tsconfig.json'...
HUNK  
HUNK  
HUNK -[[90m12:01:45 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:48 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
DIFF diff --git a/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-not-used.js b/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-not-used.js
DIFF index bc2e4ee3c4..ab23323603 100644
DIFF --- a/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-not-used.js
DIFF +++ b/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-not-used.js
HUNK @@ -440,7 +440,7 @@ Output::
HUNK  [7m [0m [91m    ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:19 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:22 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -481,6 +481,79 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/sample1/logic/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "signature": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../core/index.d.ts": {
HUNK +        "version": "-9047123202-export declare const someString: string;\nexport declare function leftPad(s: string, n: number): string;\nexport declare function multiply(a: number, b: number): number;\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "signature": "-9047123202-export declare const someString: string;\nexport declare function leftPad(s: string, n: number): string;\nexport declare function multiply(a: number, b: number): number;\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../core/anothermodule.d.ts": {
HUNK +        "version": "-4454971016-export declare const World = \"hello\";\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "signature": "-4454971016-export declare const World = \"hello\";\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "./index.ts": {
HUNK +        "version": "-5445152744-import * as c from '../core/index';\r\nexport function getSecondsInDay() {\r\n    return c.multiply(10, 15);\r\n}\r\nimport * as mod from '../core/anotherModule';\r\nexport const m = mod;\r\n\nlet y: string = 10;",
HUNK +        "signature": "-9659407152-export declare function getSecondsInDay(): number;\nimport * as mod from '../core/anotherModule';\nexport declare const m: typeof mod;\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "declaration": true,
HUNK +      "sourceMap": true,
HUNK +      "forceConsistentCasingInFileNames": true,
HUNK +      "skipDefaultLibCheck": true,
HUNK +      "watch": true,
HUNK +      "configFilePath": "./tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "./index.ts": [
HUNK +        "../core/anothermodule.d.ts",
HUNK +        "../core/index.d.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "./index.ts": [
HUNK +        "../core/anothermodule.d.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../core/anothermodule.d.ts",
HUNK +      "../core/index.d.ts",
HUNK +      [
HUNK +        "./index.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "./index.ts",
HUNK +            "start": 184,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "./index.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: change core
HUNK  
HUNK @@ -495,7 +568,7 @@ let x: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:23 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:26 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msample1/core/index.ts[0m:[93m5[0m:[93m5[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -510,7 +583,7 @@ Output::
HUNK  [7m [0m [91m    ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:24 AM[0m] Found 2 errors. Watching for file changes.
HUNK +[[90m12:01:30 AM[0m] Found 2 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -550,3 +623,60 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/sample1/core/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "signature": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "./anothermodule.ts": {
HUNK +        "version": "-2676574883-export const World = \"hello\";\r\n",
HUNK +        "signature": "-4454971016-export declare const World = \"hello\";\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "./index.ts": {
HUNK +        "version": "-17094159457-export const someString: string = \"HELLO WORLD\";\r\nexport function leftPad(s: string, n: number) { return s + n; }\r\nexport function multiply(a: number, b: number) { return a * b; }\r\n\nlet x: string = 10;",
HUNK +        "signature": "-9047123202-export declare const someString: string;\nexport declare function leftPad(s: string, n: number): string;\nexport declare function multiply(a: number, b: number): number;\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "declaration": true,
HUNK +      "declarationMap": true,
HUNK +      "skipDefaultLibCheck": true,
HUNK +      "watch": true,
HUNK +      "configFilePath": "./tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {},
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "./anothermodule.ts",
HUNK +      [
HUNK +        "./index.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "./index.ts",
HUNK +            "start": 186,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "./index.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-passed-on-command-line.js b/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-passed-on-command-line.js
DIFF index 093a9c384c..1cabdaa6df 100644
DIFF --- a/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-passed-on-command-line.js
DIFF +++ b/tests/baselines/reference/tsbuild/watchMode/programUpdates/reportErrors/when-preserveWatchOutput-is-passed-on-command-line.js
HUNK @@ -441,7 +441,7 @@ Output::
HUNK  [7m [0m [91m    ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:19 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:22 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -482,6 +482,80 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/sample1/logic/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "signature": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../core/index.d.ts": {
HUNK +        "version": "-9047123202-export declare const someString: string;\nexport declare function leftPad(s: string, n: number): string;\nexport declare function multiply(a: number, b: number): number;\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "signature": "-9047123202-export declare const someString: string;\nexport declare function leftPad(s: string, n: number): string;\nexport declare function multiply(a: number, b: number): number;\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../core/anothermodule.d.ts": {
HUNK +        "version": "-4454971016-export declare const World = \"hello\";\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "signature": "-4454971016-export declare const World = \"hello\";\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "./index.ts": {
HUNK +        "version": "-5445152744-import * as c from '../core/index';\r\nexport function getSecondsInDay() {\r\n    return c.multiply(10, 15);\r\n}\r\nimport * as mod from '../core/anotherModule';\r\nexport const m = mod;\r\n\nlet y: string = 10;",
HUNK +        "signature": "-9659407152-export declare function getSecondsInDay(): number;\nimport * as mod from '../core/anotherModule';\nexport declare const m: typeof mod;\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "declaration": true,
HUNK +      "sourceMap": true,
HUNK +      "forceConsistentCasingInFileNames": true,
HUNK +      "skipDefaultLibCheck": true,
HUNK +      "watch": true,
HUNK +      "preserveWatchOutput": true,
HUNK +      "configFilePath": "./tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "./index.ts": [
HUNK +        "../core/anothermodule.d.ts",
HUNK +        "../core/index.d.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {
HUNK +      "./index.ts": [
HUNK +        "../core/anothermodule.d.ts"
HUNK +      ]
HUNK +    },
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../core/anothermodule.d.ts",
HUNK +      "../core/index.d.ts",
HUNK +      [
HUNK +        "./index.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "./index.ts",
HUNK +            "start": 184,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "./index.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: change core
HUNK  
HUNK @@ -495,7 +569,7 @@ let x: string = 10;
HUNK  
HUNK  
HUNK  Output::
HUNK -[[90m12:01:23 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:26 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msample1/core/index.ts[0m:[93m5[0m:[93m5[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -510,7 +584,7 @@ Output::
HUNK  [7m [0m [91m    ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:24 AM[0m] Found 2 errors. Watching for file changes.
HUNK +[[90m12:01:30 AM[0m] Found 2 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -550,3 +624,61 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/sample1/core/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "signature": "-7698705165-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "./anothermodule.ts": {
HUNK +        "version": "-2676574883-export const World = \"hello\";\r\n",
HUNK +        "signature": "-4454971016-export declare const World = \"hello\";\n//# sourceMappingURL=anotherModule.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "./index.ts": {
HUNK +        "version": "-17094159457-export const someString: string = \"HELLO WORLD\";\r\nexport function leftPad(s: string, n: number) { return s + n; }\r\nexport function multiply(a: number, b: number) { return a * b; }\r\n\nlet x: string = 10;",
HUNK +        "signature": "-9047123202-export declare const someString: string;\nexport declare function leftPad(s: string, n: number): string;\nexport declare function multiply(a: number, b: number): number;\n//# sourceMappingURL=index.d.ts.map",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "composite": true,
HUNK +      "declaration": true,
HUNK +      "declarationMap": true,
HUNK +      "skipDefaultLibCheck": true,
HUNK +      "watch": true,
HUNK +      "preserveWatchOutput": true,
HUNK +      "configFilePath": "./tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {},
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "./anothermodule.ts",
HUNK +      [
HUNK +        "./index.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "./index.ts",
HUNK +            "start": 186,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ]
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "./index.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
DIFF diff --git a/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-semantic-errors.js b/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-semantic-errors.js
DIFF index f9209ae7cc..22affa64ee 100644
DIFF --- a/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-semantic-errors.js
DIFF +++ b/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-semantic-errors.js
HUNK @@ -64,6 +64,80 @@ Semantic diagnostics in builder refreshed for::
HUNK  /src/src/other.ts
HUNK  
HUNK  
HUNK +//// [/src/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-6245214333-export interface A {\r\n    name: string;\r\n}\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-4882119183-export {};\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-4882119183-export {};\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "incremental": true,
HUNK +      "project": "..",
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  
HUNK  Change:: no-change-run
HUNK @@ -90,10 +164,6 @@ Program files::
HUNK  /src/src/other.ts
HUNK  
HUNK  Semantic diagnostics in builder refreshed for::
HUNK -/lib/lib.d.ts
HUNK -/src/shared/types/db.ts
HUNK -/src/src/main.ts
HUNK -/src/src/other.ts
HUNK  
HUNK  
HUNK  
HUNK @@ -118,10 +188,7 @@ Program files::
HUNK  /src/src/other.ts
HUNK  
HUNK  Semantic diagnostics in builder refreshed for::
HUNK -/lib/lib.d.ts
HUNK -/src/shared/types/db.ts
HUNK  /src/src/main.ts
HUNK -/src/src/other.ts
HUNK  
HUNK  
HUNK  //// [/src/dev-build/shared/types/db.js]
DIFF diff --git a/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-syntax-errors.js b/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-syntax-errors.js
DIFF index bf88e9a634..4155f637fe 100644
DIFF --- a/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-syntax-errors.js
DIFF +++ b/tests/baselines/reference/tsc/incremental/initial-build/with-noEmitOnError-syntax-errors.js
HUNK @@ -71,6 +71,68 @@ Semantic diagnostics in builder refreshed for::
HUNK  /src/src/other.ts
HUNK  
HUNK  
HUNK +//// [/src/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-6245214333-export interface A {\r\n    name: string;\r\n}\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-4882119183-export {};\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-4882119183-export {};\r\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "incremental": true,
HUNK +      "project": "..",
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  
HUNK  Change:: no-change-run
HUNK @@ -102,10 +164,6 @@ Program files::
HUNK  /src/src/other.ts
HUNK  
HUNK  Semantic diagnostics in builder refreshed for::
HUNK -/lib/lib.d.ts
HUNK -/src/shared/types/db.ts
HUNK -/src/src/main.ts
HUNK -/src/src/other.ts
HUNK  
HUNK  
HUNK  
HUNK @@ -132,10 +190,7 @@ Program files::
HUNK  /src/src/other.ts
HUNK  
HUNK  Semantic diagnostics in builder refreshed for::
HUNK -/lib/lib.d.ts
HUNK -/src/shared/types/db.ts
HUNK  /src/src/main.ts
HUNK -/src/src/other.ts
HUNK  
HUNK  
HUNK  //// [/src/dev-build/shared/types/db.js]
DIFF diff --git a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/with-noEmitOnError-with-incremental.js b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/with-noEmitOnError-with-incremental.js
DIFF index 573187027d..2211239b58 100644
DIFF --- a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/with-noEmitOnError-with-incremental.js
DIFF +++ b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependencies/with-noEmitOnError-with-incremental.js
HUNK @@ -50,7 +50,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:32 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -90,6 +90,69 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "assumeChangesOnlyAffectDirectDependencies": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -98,7 +161,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:36 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m4[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m',' expected.
HUNK @@ -112,7 +175,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:42 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -161,10 +224,10 @@ const a = {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:46 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:00 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:04 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -201,25 +264,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = {
HUNK -    lastName: 'sdsd'
HUNK -};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -console.log("hi");
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -269,6 +313,25 @@ console.log("hi");
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = {
HUNK +    lastName: 'sdsd'
HUNK +};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +console.log("hi");
HUNK +
HUNK +
HUNK  
HUNK  Change:: Semantic Error
HUNK  
HUNK @@ -280,7 +343,7 @@ const a: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:04 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:08 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -289,7 +352,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:05 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:12 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -326,6 +389,73 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "assumeChangesOnlyAffectDirectDependencies": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -334,7 +464,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:09 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:16 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -343,7 +473,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:10 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:17 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -390,10 +520,10 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:14 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:21 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:21 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:28 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -430,12 +560,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = "hello";
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -485,6 +609,12 @@ var a = "hello";
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = "hello";
HUNK +
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -493,10 +623,10 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:25 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:32 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:26 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:33 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
DIFF diff --git a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/with-noEmitOnError-with-incremental.js b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/with-noEmitOnError-with-incremental.js
DIFF index 7366de158e..3645a89dca 100644
DIFF --- a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/with-noEmitOnError-with-incremental.js
DIFF +++ b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/assumeChangesOnlyAffectDirectDependenciesAndD/with-noEmitOnError-with-incremental.js
HUNK @@ -50,7 +50,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:32 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -90,6 +90,70 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "assumeChangesOnlyAffectDirectDependencies": true,
HUNK +      "declaration": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -98,7 +162,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:36 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m4[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m',' expected.
HUNK @@ -112,7 +176,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:42 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -161,10 +225,10 @@ const a = {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:46 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:06 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:10 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -201,39 +265,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.d.ts]
HUNK -export interface A {
HUNK -    name: string;
HUNK -}
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = {
HUNK -    lastName: 'sdsd'
HUNK -};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts]
HUNK -export {};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -console.log("hi");
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.d.ts]
HUNK -export {};
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -284,6 +315,39 @@ export {};
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.d.ts]
HUNK +export interface A {
HUNK +    name: string;
HUNK +}
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = {
HUNK +    lastName: 'sdsd'
HUNK +};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts]
HUNK +export {};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +console.log("hi");
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.d.ts]
HUNK +export {};
HUNK +
HUNK +
HUNK  
HUNK  Change:: Semantic Error
HUNK  
HUNK @@ -295,7 +359,7 @@ const a: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:10 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:14 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -304,7 +368,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:11 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:18 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -341,6 +405,74 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "assumeChangesOnlyAffectDirectDependencies": true,
HUNK +      "declaration": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -349,7 +481,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:15 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:22 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -358,7 +490,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:16 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:23 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -405,10 +537,10 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:20 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:27 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:30 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:37 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -445,13 +577,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = "hello";
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts] file written with same contents
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -502,6 +627,13 @@ var a = "hello";
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = "hello";
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts] file written with same contents
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -510,10 +642,10 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:34 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:35 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:42 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
DIFF diff --git a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/with-noEmitOnError-with-incremental.js b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/with-noEmitOnError-with-incremental.js
DIFF index 4c54f4a3dc..0b10e3cc74 100644
DIFF --- a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/with-noEmitOnError-with-incremental.js
DIFF +++ b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/default/with-noEmitOnError-with-incremental.js
HUNK @@ -56,7 +56,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:32 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -96,6 +96,68 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -104,7 +166,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:36 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m4[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m',' expected.
HUNK @@ -118,7 +180,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:42 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -167,10 +229,10 @@ const a = {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:46 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:00 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:04 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -207,25 +269,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = {
HUNK -    lastName: 'sdsd'
HUNK -};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -console.log("hi");
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -274,6 +317,25 @@ console.log("hi");
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = {
HUNK +    lastName: 'sdsd'
HUNK +};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +console.log("hi");
HUNK +
HUNK +
HUNK  
HUNK  Change:: Semantic Error
HUNK  
HUNK @@ -285,7 +347,7 @@ const a: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:04 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:08 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -294,7 +356,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:05 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:12 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -331,6 +393,72 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -339,7 +467,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:09 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:16 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -348,7 +476,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:10 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:17 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -395,10 +523,10 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:14 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:21 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:21 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:28 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -435,12 +563,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = "hello";
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -489,6 +611,12 @@ var a = "hello";
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = "hello";
HUNK +
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -497,10 +625,10 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:25 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:32 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:26 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:33 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
DIFF diff --git a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/with-noEmitOnError-with-incremental.js b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/with-noEmitOnError-with-incremental.js
DIFF index c39991c7ec..53f2428366 100644
DIFF --- a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/with-noEmitOnError-with-incremental.js
DIFF +++ b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/defaultAndD/with-noEmitOnError-with-incremental.js
HUNK @@ -50,7 +50,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:32 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -90,6 +90,69 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "declaration": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -98,7 +161,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:36 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m4[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m',' expected.
HUNK @@ -112,7 +175,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:42 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -161,10 +224,10 @@ const a = {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:46 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:06 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:10 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -201,39 +264,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.d.ts]
HUNK -export interface A {
HUNK -    name: string;
HUNK -}
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = {
HUNK -    lastName: 'sdsd'
HUNK -};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts]
HUNK -export {};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -console.log("hi");
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.d.ts]
HUNK -export {};
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -283,6 +313,39 @@ export {};
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.d.ts]
HUNK +export interface A {
HUNK +    name: string;
HUNK +}
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = {
HUNK +    lastName: 'sdsd'
HUNK +};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts]
HUNK +export {};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +console.log("hi");
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.d.ts]
HUNK +export {};
HUNK +
HUNK +
HUNK  
HUNK  Change:: Semantic Error
HUNK  
HUNK @@ -294,7 +357,7 @@ const a: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:10 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:14 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -303,7 +366,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:11 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:18 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -340,6 +403,73 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "declaration": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -348,7 +478,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:15 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:22 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -357,7 +487,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:16 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:23 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -404,10 +534,10 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:20 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:27 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:30 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:37 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -444,13 +574,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = "hello";
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts] file written with same contents
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -500,6 +623,13 @@ var a = "hello";
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = "hello";
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts] file written with same contents
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -508,10 +638,10 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:34 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:35 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:42 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
DIFF diff --git a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/with-noEmitOnError-with-incremental.js b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/with-noEmitOnError-with-incremental.js
DIFF index fae85fec53..f37e12c72a 100644
DIFF --- a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/with-noEmitOnError-with-incremental.js
DIFF +++ b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModules/with-noEmitOnError-with-incremental.js
HUNK @@ -50,7 +50,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:32 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -90,6 +90,69 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "isolatedModules": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -98,7 +161,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:36 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m4[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m',' expected.
HUNK @@ -112,7 +175,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:42 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -161,10 +224,10 @@ const a = {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:46 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:00 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:04 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -201,25 +264,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = {
HUNK -    lastName: 'sdsd'
HUNK -};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -console.log("hi");
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -269,6 +313,25 @@ console.log("hi");
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = {
HUNK +    lastName: 'sdsd'
HUNK +};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +console.log("hi");
HUNK +
HUNK +
HUNK  
HUNK  Change:: Semantic Error
HUNK  
HUNK @@ -280,7 +343,7 @@ const a: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:04 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:08 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -289,7 +352,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:05 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:12 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -326,6 +389,73 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "isolatedModules": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -334,7 +464,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:09 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:16 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -343,7 +473,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:10 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:17 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -390,10 +520,10 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:14 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:21 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:21 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:28 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -430,12 +560,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = "hello";
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -485,6 +609,12 @@ var a = "hello";
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = "hello";
HUNK +
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -493,10 +623,10 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:25 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:32 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:26 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:33 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
DIFF diff --git a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/with-noEmitOnError-with-incremental.js b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/with-noEmitOnError-with-incremental.js
DIFF index ff43939b2d..49f1078e3f 100644
DIFF --- a/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/with-noEmitOnError-with-incremental.js
DIFF +++ b/tests/baselines/reference/tscWatch/emitAndErrorUpdates/isolatedModulesAndD/with-noEmitOnError-with-incremental.js
HUNK @@ -50,7 +50,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:32 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -90,6 +90,70 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "2626879346-import { A } from \"../shared/types/db\";\r\nconst a = {\r\n    lastName: 'sdsd'\r\n;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "isolatedModules": true,
HUNK +      "declaration": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      "../src/main.ts",
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../shared/types/db.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ],
HUNK +      [
HUNK +        "../src/other.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -98,7 +162,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:36 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m4[0m:[93m1[0m - [91merror[0m[90m TS1005: [0m',' expected.
HUNK @@ -112,7 +176,7 @@ Output::
HUNK      The parser expected to find a '}' to match the '{' token here.
HUNK  
HUNK  
HUNK -[[90m12:00:37 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:00:42 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -161,10 +225,10 @@ const a = {
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:00:41 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:00:46 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:06 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:10 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -201,39 +265,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.d.ts]
HUNK -export interface A {
HUNK -    name: string;
HUNK -}
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = {
HUNK -    lastName: 'sdsd'
HUNK -};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts]
HUNK -export {};
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -console.log("hi");
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/other.d.ts]
HUNK -export {};
HUNK -
HUNK -
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -284,6 +315,39 @@ export {};
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/shared/types/db.d.ts]
HUNK +export interface A {
HUNK +    name: string;
HUNK +}
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = {
HUNK +    lastName: 'sdsd'
HUNK +};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts]
HUNK +export {};
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +console.log("hi");
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/other.d.ts]
HUNK +export {};
HUNK +
HUNK +
HUNK  
HUNK  Change:: Semantic Error
HUNK  
HUNK @@ -295,7 +359,7 @@ const a: string = 10;
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:10 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:14 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -304,7 +368,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:11 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:18 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -341,6 +405,74 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK +{
HUNK +  "program": {
HUNK +    "fileInfos": {
HUNK +      "../../../../../a/lib/lib.d.ts": {
HUNK +        "version": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "signature": "3858781397-/// <reference no-default-lib=\"true\"/>\ninterface Boolean {}\ninterface Function {}\ninterface CallableFunction {}\ninterface NewableFunction {}\ninterface IArguments {}\ninterface Number { toExponential: any; }\ninterface Object {}\ninterface RegExp {}\ninterface String { charAt: any; }\ninterface Array<T> { length: number; [n: number]: T; }\ninterface ReadonlyArray<T> {}\ndeclare const console: { log(msg: any): void; };",
HUNK +        "affectsGlobalScope": true
HUNK +      },
HUNK +      "../shared/types/db.ts": {
HUNK +        "version": "-9621097780-export interface A {\r\n    name: string;\r\n}",
HUNK +        "signature": "-5014788164-export interface A {\n    name: string;\n}\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/main.ts": {
HUNK +        "version": "-11111345725-import { A } from \"../shared/types/db\";\nconst a: string = 10;",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      },
HUNK +      "../src/other.ts": {
HUNK +        "version": "11373096570-console.log(\"hi\");\r\nexport { }",
HUNK +        "signature": "-3531856636-export {};\n",
HUNK +        "affectsGlobalScope": false
HUNK +      }
HUNK +    },
HUNK +    "options": {
HUNK +      "outDir": "./",
HUNK +      "noEmitOnError": true,
HUNK +      "isolatedModules": true,
HUNK +      "declaration": true,
HUNK +      "watch": true,
HUNK +      "incremental": true,
HUNK +      "configFilePath": "../tsconfig.json"
HUNK +    },
HUNK +    "referencedMap": {
HUNK +      "../src/main.ts": [
HUNK +        "../shared/types/db.ts"
HUNK +      ]
HUNK +    },
HUNK +    "exportedModulesMap": {},
HUNK +    "semanticDiagnosticsPerFile": [
HUNK +      "../../../../../a/lib/lib.d.ts",
HUNK +      "../shared/types/db.ts",
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        [
HUNK +          {
HUNK +            "file": "../src/main.ts",
HUNK +            "start": 46,
HUNK +            "length": 1,
HUNK +            "code": 2322,
HUNK +            "category": 1,
HUNK +            "messageText": "Type 'number' is not assignable to type 'string'."
HUNK +          }
HUNK +        ]
HUNK +      ],
HUNK +      "../src/other.ts"
HUNK +    ],
HUNK +    "affectedFilesPendingEmit": [
HUNK +      [
HUNK +        "../src/main.ts",
HUNK +        1
HUNK +      ]
HUNK +    ]
HUNK +  },
HUNK +  "version": "FakeTSVersion"
HUNK +}
HUNK +
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -349,7 +481,7 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:15 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:22 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK  [96msrc/main.ts[0m:[93m2[0m:[93m7[0m - [91merror[0m[90m TS2322: [0mType 'number' is not assignable to type 'string'.
HUNK @@ -358,7 +490,7 @@ Output::
HUNK  [7m [0m [91m      ~[0m
HUNK  
HUNK  
HUNK -[[90m12:01:16 AM[0m] Found 1 error. Watching for file changes.
HUNK +[[90m12:01:23 AM[0m] Found 1 error. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -405,10 +537,10 @@ const a: string = "hello";
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:20 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:27 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:30 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:37 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK @@ -445,13 +577,6 @@ FsWatchesRecursive::
HUNK  
HUNK  exitCode:: ExitStatus.undefined
HUNK  
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK -"use strict";
HUNK -exports.__esModule = true;
HUNK -var a = "hello";
HUNK -
HUNK -
HUNK -//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts] file written with same contents
HUNK  //// [/user/username/projects/noEmitOnError/dev-build/tsconfig.tsbuildinfo]
HUNK  {
HUNK    "program": {
HUNK @@ -502,6 +627,13 @@ var a = "hello";
HUNK    "version": "FakeTSVersion"
HUNK  }
HUNK  
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.js]
HUNK +"use strict";
HUNK +exports.__esModule = true;
HUNK +var a = "hello";
HUNK +
HUNK +
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/src/main.d.ts] file written with same contents
HUNK  
HUNK  Change:: No change
HUNK  
HUNK @@ -510,10 +642,10 @@ Input::
HUNK  
HUNK  Output::
HUNK  >> Screen clear
HUNK -[[90m12:01:34 AM[0m] File change detected. Starting incremental compilation...
HUNK +[[90m12:01:41 AM[0m] File change detected. Starting incremental compilation...
HUNK  
HUNK  
HUNK -[[90m12:01:35 AM[0m] Found 0 errors. Watching for file changes.
HUNK +[[90m12:01:42 AM[0m] Found 0 errors. Watching for file changes.
HUNK  
HUNK  
HUNK  
HUNK 
HUNK +//// [/user/username/projects/noEmitOnError/dev-build/s
Done in 1.84s.
